From d76112cdfad3209af507e8e62c3d56fb2c0f40a6 Mon Sep 17 00:00:00 2001
From: Vlad Zagorodniy <vladzzag@gmail.com>
Date: Tue, 13 Feb 2018 01:48:58 +0200
Subject: [PATCH] align checkable widgets in menu items

Summary:
Some icons in menus have small internal padding. In addition to that,
`PM_SmallIconSize` is smaller than space left to icons, which results
in adding space around icons. This all "shifts" check boxes and
radio buttons to the left side.

So, check boxes and radio buttons have to be centered between icon/text
and the left border. (we can't rely on margins)

Also, it fixes double space between check boxes and text when icons
in menus are disabled. (mostly, as a side effect)

Test Plan: * open a context menu with icons and check boxes

Reviewers: #breeze, #vdg, hpereiradacosta

Subscribers: plasma-devel

Tags: #plasma

Differential Revision: https://phabricator.kde.org/D10480
---
 kstyle/breeze.h        |  3 ++-
 kstyle/breezestyle.cpp | 23 +++++++++++++----------
 2 files changed, 15 insertions(+), 11 deletions(-)

diff --git a/kstyle/breeze.h b/kstyle/breeze.h
index a20841bf..bc63e4c4 100644
--- a/kstyle/breeze.h
+++ b/kstyle/breeze.h
@@ -67,7 +67,8 @@ namespace Breeze
 
         // menu items
         Menu_FrameWidth = 0,
-        MenuItem_MarginWidth = 3,
+        MenuItem_MarginWidth = 5,
+        MenuItem_MarginHeight = 3,
         MenuItem_ItemSpacing = 4,
         MenuItem_AcceleratorSpace = 16,
         MenuButton_IndicatorWidth = 20,
diff --git a/kstyle/breezestyle.cpp b/kstyle/breezestyle.cpp
index 07f0be7d..61125581 100644
--- a/kstyle/breezestyle.cpp
+++ b/kstyle/breezestyle.cpp
@@ -2749,7 +2749,7 @@ namespace Breeze
                 size.setHeight( qMax( size.height(), int(Metrics::MenuButton_IndicatorWidth) ) );
                 size.setHeight( qMax( size.height(), int(Metrics::CheckBox_Size) ) );
                 size.setHeight( qMax( size.height(), iconWidth ) );
-                return expandSize( size, Metrics::MenuItem_MarginWidth );
+                return expandSize( size, Metrics::MenuItem_MarginWidth, Metrics::MenuItem_MarginHeight );
 
             }
 
@@ -2759,7 +2759,7 @@ namespace Breeze
                 if( menuItemOption->text.isEmpty() && menuItemOption->icon.isNull() )
                 {
 
-                    return expandSize( QSize(0,1), Metrics::MenuItem_MarginWidth );
+                    return expandSize( QSize(0,1), Metrics::MenuItem_MarginWidth, Metrics::MenuItem_MarginHeight );
 
                 } else {
 
@@ -4692,7 +4692,7 @@ namespace Breeze
         }
 
         // get rect available for contents
-        auto contentsRect( insideMargin( rect,  Metrics::MenuItem_MarginWidth ) );
+        auto contentsRect( insideMargin( rect,  Metrics::MenuItem_MarginWidth, Metrics::MenuItem_MarginHeight ) );
 
         // define relevant rectangles
         // checkbox
@@ -4736,14 +4736,18 @@ namespace Breeze
         const bool showIcon( showIconsInMenuItems() );
         if( showIcon ) iconWidth = isQtQuickControl( option, widget ) ? qMax( pixelMetric(PM_SmallIconSize, option, widget ), menuItemOption->maxIconWidth ) : menuItemOption->maxIconWidth;
 
-        QRect iconRect( contentsRect.left(), contentsRect.top() + (contentsRect.height()-iconWidth)/2, iconWidth, iconWidth );
-        contentsRect.setLeft( iconRect.right() + Metrics::MenuItem_ItemSpacing + 1 );
+        QRect iconRect;
+        if( showIcon && iconWidth > 0 )
+        {
+            iconRect = QRect( contentsRect.left(), contentsRect.top() + (contentsRect.height()-iconWidth)/2, iconWidth, iconWidth );
+            contentsRect.setLeft( iconRect.right() + Metrics::MenuItem_ItemSpacing + 1 );
+            const QSize iconSize( pixelMetric( PM_SmallIconSize, option, widget ), pixelMetric( PM_SmallIconSize, option, widget ) );
+            iconRect = centerRect( iconRect, iconSize );
+        }
 
         if( showIcon && !menuItemOption->icon.isNull() )
         {
 
-            const QSize iconSize( pixelMetric( PM_SmallIconSize, option, widget ), pixelMetric( PM_SmallIconSize, option, widget ) );
-            iconRect = centerRect( iconRect, iconSize );
             iconRect = visualRect( option, iconRect );
 
             // icon mode
@@ -4785,7 +4789,6 @@ namespace Breeze
 
         }
 
-
         // text
         auto textRect = contentsRect;
         if( !menuItemOption->text.isEmpty() )
@@ -6659,12 +6662,12 @@ namespace Breeze
         // render a separator at the bottom
         const auto& palette( option->palette );
         const auto color( _helper->separatorColor( palette ) );
-        _helper->renderSeparator( painter, QRect( option->rect.bottomLeft()-QPoint( 0, Metrics::MenuItem_MarginWidth), QSize( option->rect.width(), 1 ) ), color );
+        _helper->renderSeparator( painter, QRect( option->rect.bottomLeft()-QPoint( 0, Metrics::MenuItem_MarginHeight), QSize( option->rect.width(), 1 ) ), color );
 
         // render text in the center of the rect
         // icon is discarded on purpose
         painter->setFont( option->font );
-        const auto contentsRect = insideMargin( option->rect, Metrics::MenuItem_MarginWidth );
+        const auto contentsRect = insideMargin( option->rect, Metrics::MenuItem_MarginWidth, Metrics::MenuItem_MarginHeight );
         drawItemText( painter, contentsRect, Qt::AlignCenter, palette, true, option->text, QPalette::WindowText );
 
     }
-- 
2.16.1

