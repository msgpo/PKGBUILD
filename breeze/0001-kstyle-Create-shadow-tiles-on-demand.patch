From cc24d25a5962d3bb89106e99f46d912bab8c44d4 Mon Sep 17 00:00:00 2001
From: Kai Uwe Broulik <kde@privat.broulik.de>
Date: Fri, 17 Aug 2018 15:05:15 +0200
Subject: [PATCH] [kstyle] Create shadow tiles on demand

Differential Revision: https://phabricator.kde.org/D14898
---
 kstyle/breezemdiwindowshadow.cpp |  4 +++-
 kstyle/breezemdiwindowshadow.h   | 13 ++++++++-----
 kstyle/breezeshadowhelper.cpp    | 10 ++++++----
 kstyle/breezestyle.cpp           |  2 +-
 4 files changed, 18 insertions(+), 11 deletions(-)

diff --git a/kstyle/breezemdiwindowshadow.cpp b/kstyle/breezemdiwindowshadow.cpp
index 297d916d..560bd2ea 100644
--- a/kstyle/breezemdiwindowshadow.cpp
+++ b/kstyle/breezemdiwindowshadow.cpp
@@ -228,8 +228,10 @@ namespace Breeze
         // make sure shadow is not already installed
         if( findShadow( object ) ) return;
 
+        if ( !_shadowHelper ) return;
+
         // create new shadow
-        auto windowShadow( new MdiWindowShadow( widget->parentWidget(), _shadowTiles ) );
+        auto windowShadow( new MdiWindowShadow( widget->parentWidget(), _shadowHelper->shadowTiles() ) );
         windowShadow->setWidget( widget );
 
     }
diff --git a/kstyle/breezemdiwindowshadow.h b/kstyle/breezemdiwindowshadow.h
index 392b8187..e0389ea5 100644
--- a/kstyle/breezemdiwindowshadow.h
+++ b/kstyle/breezemdiwindowshadow.h
@@ -26,12 +26,15 @@
 
 #include <QWidget>
 #include <QPaintEvent>
+#include <QPointer>
 
 #include "breezetileset.h"
 
 namespace Breeze
 {
 
+    class ShadowHelper;
+
     //* frame shadow
     /** this allows the shadow to be painted over the widgets viewport */
     class MdiWindowShadow: public QWidget
@@ -91,9 +94,9 @@ namespace Breeze
         virtual ~MdiWindowShadowFactory()
         {}
 
-        //* set shadow tiles
-        void setShadowTiles( const TileSet& shadowTiles )
-        { _shadowTiles = shadowTiles; }
+        //* set shadow helper
+        void setShadowHelper( ShadowHelper* shadowHelper )
+        { _shadowHelper = shadowHelper; }
 
         //* register widget
         bool registerWidget( QWidget* );
@@ -160,8 +163,8 @@ namespace Breeze
         //* set of registered widgets
         QSet<const QObject*> _registeredWidgets;
 
-        //* tileset used to draw shadow
-        TileSet _shadowTiles;
+        //* shadow helper used to generate the shadows
+        QPointer<ShadowHelper> _shadowHelper;
 
     };
 
diff --git a/kstyle/breezeshadowhelper.cpp b/kstyle/breezeshadowhelper.cpp
index d05cabf8..9de90b30 100644
--- a/kstyle/breezeshadowhelper.cpp
+++ b/kstyle/breezeshadowhelper.cpp
@@ -216,9 +216,6 @@ namespace Breeze
         // reset
         reset();
 
-        // create shadow tiles
-        shadowTiles();
-
         // update property for registered widgets
         for( QMap<QWidget*,WId>::const_iterator iter = _widgets.constBegin(); iter != _widgets.constEnd(); ++iter )
         { installShadows( iter.key() ); }
@@ -480,7 +477,7 @@ namespace Breeze
     //_______________________________________________________
     bool ShadowHelper::installShadows( QWidget* widget )
     {
-        if( !widget || !_shadowTiles.isValid() ) return false;
+        if( !widget ) return false;
 
         /*
         From bespin code. Supposibly prevent playing with some 'pseudo-widgets'
@@ -489,6 +486,11 @@ namespace Breeze
         if( !(widget->testAttribute(Qt::WA_WState_Created) && widget->internalWinId() ))
         { return false; }
 
+        // create shadow tiles if needed
+        shadowTiles();
+
+        if( !_shadowTiles.isValid() ) return false;
+
         if( Helper::isX11() ) return installX11Shadows( widget );
         if( Helper::isWayland() ) return installWaylandShadows( widget );
 
diff --git a/kstyle/breezestyle.cpp b/kstyle/breezestyle.cpp
index 29f45696..ad3ae6d6 100644
--- a/kstyle/breezestyle.cpp
+++ b/kstyle/breezestyle.cpp
@@ -1433,7 +1433,7 @@ namespace Breeze
         _shadowHelper->loadConfig();
 
         // set mdiwindow factory shadow tiles
-        _mdiWindowShadowFactory->setShadowTiles( _shadowHelper->shadowTiles() );
+        _mdiWindowShadowFactory->setShadowHelper( _shadowHelper );
 
         // clear icon cache
         _iconCache.clear();
-- 
2.18.0

