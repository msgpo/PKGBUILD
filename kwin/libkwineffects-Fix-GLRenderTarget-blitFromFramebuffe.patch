From c409c2c157f86528b8d3c9107323b408c0de452d Mon Sep 17 00:00:00 2001
From: Vlad Zagorodniy <vladzzag@gmail.com>
Date: Thu, 12 Apr 2018 01:00:19 +0300
Subject: [PATCH 5/7] [libkwineffects] Fix GLRenderTarget::blitFromFramebuffer

* refactor calculations of bounds of the source and destination
rectangle
* fix bug in calculation of bounds of the source rectangle
* be smart when picking read framebuffer
---
 libkwineffects/kwinglutils.cpp | 29 ++++++++++++++++++++---------
 1 file changed, 20 insertions(+), 9 deletions(-)

diff --git a/libkwineffects/kwinglutils.cpp b/libkwineffects/kwinglutils.cpp
index f5e0fc419..d39fec37d 100644
--- a/libkwineffects/kwinglutils.cpp
+++ b/libkwineffects/kwinglutils.cpp
@@ -1347,17 +1347,28 @@ void GLRenderTarget::blitFromFramebuffer(const QRect &source, const QRect &desti
         return;
     }
 
+    const int srcFbo = s_renderTargets.isEmpty() ? 0 : s_renderTargets.top()->m_framebuffer;
+    const QRect src = source.isNull() ? s_virtualScreenGeometry : source;
+
+    // TODO: take viewport into account.
+    const QRect screenGeo(s_virtualScreenGeometry);
+    const qreal screenScale = s_virtualScreenScale;
+    const int srcX0 = (src.x() - screenGeo.x()) * screenScale;
+    const int srcY0 = (screenGeo.height() + screenGeo.y() - src.y() - src.height()) * screenScale;
+    const int srcX1 = (src.x() - screenGeo.x() + src.width()) * screenScale;
+    const int srcY1 = (screenGeo.height() + screenGeo.y() - src.y()) * screenScale;
+
+    const QRect dst = destination.isNull() ? m_viewport : destination;
+    const int dstX0 = dst.x();
+    const int dstY0 = m_viewport.height() - dst.y() - dst.height();
+    const int dstX1 = dst.x() + dst.width();
+    const int dstY1 = m_viewport.height() - dst.y();
+
     GLRenderTarget::pushRenderTarget(this);
     glBindFramebuffer(GL_DRAW_FRAMEBUFFER, m_framebuffer);
-    glBindFramebuffer(GL_READ_FRAMEBUFFER, 0);
-    const QRect s = source.isNull() ? s_virtualScreenGeometry : source;
-    const QRect d = destination.isNull() ? m_viewport : destination;
-
-    glBlitFramebuffer((s.x() - s_virtualScreenGeometry.x()) * s_virtualScreenScale,
-                      (s_virtualScreenGeometry.height() - s_virtualScreenGeometry.y() + s.y() - s.height()) * s_virtualScreenScale,
-                      (s.x() - s_virtualScreenGeometry.x() + s.width()) * s_virtualScreenScale,
-                      (s_virtualScreenGeometry.height() - s_virtualScreenGeometry.y() + s.y()) * s_virtualScreenScale,
-                      d.x(), m_viewport.height() - d.y() - d.height(), d.x() + d.width(), m_viewport.height() - d.y(),
+    glBindFramebuffer(GL_READ_FRAMEBUFFER, srcFbo);
+    glBlitFramebuffer(srcX0, srcY0, srcX1, srcY1,
+                      dstX0, dstY0, dstX1, dstY1,
                       GL_COLOR_BUFFER_BIT, filter);
     GLRenderTarget::popRenderTarget();
 }
-- 
2.17.0

